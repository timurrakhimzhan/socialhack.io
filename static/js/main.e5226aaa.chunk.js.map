{"version":3,"sources":["templates/index.ts","router/sidebar/index.tsx","statistics/index.tsx","appeals/appeal.tsx","appeals/appealsData.ts","appeals/index.tsx","appeals/sort.tsx","state/actions/actions.tsx","state/actions/actionTypes.tsx","appealStats/allStats.tsx","appealStats/randomAppeals.tsx","appealStats/categoryStats.tsx","appealStats/index.tsx","router/index.tsx","router/header/index.tsx","state/reducers/appealsReducer.tsx","state/reducers/index.ts","state/store/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HorizontalSpace","styled","div","width","VerticalSpace","height","Divider","color","SidebarWrapper","SidebarElement","Sidebar","routes","filter","elem","icon","sidebarTitle","map","index","to","path","activeStyle","style","key","StatisticsWrapper","Statistics","AppealWrapper","header","TextWrapper","hover","left","right","Appeal","name","appealsNumber","districtFitness","rating","onClick","setSortColumn","undefined","Math","floor","appeals","categories","categoriesTranslation","featureMap","AppealsWrapper","Row","Appeals","history","useHistory","dispatch","useDispatch","useState","increaseOrder","setIncreaseOrder","sortColumn","value","appealElem","sort","appealA","appealB","column","rate","type","payload","push","ChartWrapper","AllStats","data","useSelector","state","statsData","category","useLayoutEffect","x","am4core","am4charts","dataObject","date","Object","keys","dateAxis","xAxes","renderer","grid","template","location","title","text","valueAxis","yAxes","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","titles","create","fontSize","marginBottom","dispose","id","randomize","startDate","endDate","startDateMoment","moment","endDateMoment","appealsPerDay","duration","diff","asDays","result","i","categoryIndex","random","length","format","isBefore","isSame","add","probability","CategoryStatsWrapper","Select","select","Option","option","CategoryStats","onChange","event","target","am4themes_animated","AppealStatsWrapper","AppealStats","appeal","useEffect","exact","main","faChartBar","faAddressBook","Wrapper","RouterWrapper","Routing","HeaderWrapper","Header","initialState","combineReducers","action","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","AppWrapper","withRouter","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5226aaa.chunk.js","sourcesContent":["import styled from 'styled-components';\n\ninterface SpaceProps {\n    width?: string,\n    height?: string\n}\n\nexport const HorizontalSpace = styled.div`\n   width: ${({width}: SpaceProps) => width || \"0\"};\n`;\n\nexport const VerticalSpace = styled.div`\n   height: ${({height}: SpaceProps) => height || \"0\"};\n`;\nexport const Divider = styled.div`\n    height: 1px;\n    width: ${({width}: SpaceProps) => width ? width : \"100%\"};\n    background-color: ${({color}) => color ? color : \"black\"};\n`;","import styled from 'styled-components';\nimport React from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {HorizontalSpace, VerticalSpace} from \"../../templates\";\nimport { useHistory } from \"react-router-dom\";\nimport {NavLink} from \"react-router-dom\";\nimport {RouteElem} from \"../index\";\n\n\nconst SidebarWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    background-color: #222831;\n    flex: 2;\n    height: 90vh;\n`;\n\nconst SidebarElement = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 10px;\n    font-size: 0.8em;\n`;\n\n\nfunction Sidebar({routes}: any) {\n    return <SidebarWrapper>\n        <VerticalSpace height={\"25px\"}/>\n        {\n            routes.filter((elem: RouteElem) => elem.icon && elem.sidebarTitle).map((elem: RouteElem, index: number) =>\n                <NavLink to={elem.path} activeStyle={{color: \"#ddd3d3\"}} style={{color: \"#999999\"}} key={index}>\n                    <SidebarElement>\n                        {elem.icon ? <FontAwesomeIcon icon={elem.icon} /> : null}\n                        <HorizontalSpace width={\"10px\"}/>\n                        {elem.sidebarTitle}\n                    </SidebarElement>\n                </NavLink>\n                )\n        }\n    </SidebarWrapper>\n}\n\nexport default Sidebar;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst StatisticsWrapper = styled.div`\n    background-color: #dddddd;\n    min-height: 90vh;\n    display: flex;\n`;\n\nfunction Statistics() {\n    return <StatisticsWrapper>Statistics</StatisticsWrapper>\n}\n\nexport default Statistics;","import styled from 'styled-components';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AppealWrapper = styled.div `\n    display: flex;\n    width: 90%;\n    ${({header}: AppealProps) => !header ? `background-color: #eeeeee;` : ''};\n    min-height: 50px;\n    margin-bottom: 5px;\n    flex-direction: columns;\n    justify-content: space-between;\n    padding: 0 20px;\n    box-sizing: padding-box;\n    font-size: 0.8em;\n    ${({header}: AppealProps) => header ? `font-weight: bold;` : ''};\n    ${({header}: AppealProps) => !header ? `:hover {\n        background-color: white;\n    }` : ''};\n`;\n\nconst TextWrapper = styled.div`\n    flex: 1;\n    display: flex;\n    align-items: center;\n    ${({hover}: TextWrapperPropsI) => hover ? \":hover{color: gray;}\" : \"\"}\n    ${({left}: TextWrapperPropsI) => left ? \"justify-content: flex-start;\" : \"\"}\n    ${({right}: TextWrapperPropsI) => right ? \"justify-content: flex-end;\" : \"\"}\n    ${({right, left}: TextWrapperPropsI) => !left && !right ? \"justify-content: center;\" : \"\"}\n`;\n\ninterface TextWrapperPropsI {\n    left?: boolean,\n    right?: boolean,\n    hover?: boolean\n}\n\nfunction Appeal({index, name, appealsNumber, districtFitness, rating, header, onClick, setSortColumn}: AppealProps) {\n    return <AppealWrapper header={header} onClick={onClick}>\n        <TextWrapper left>{!header ? index : `№`}</TextWrapper>\n        <TextWrapper>{!header ? name : `Название объекта`}</TextWrapper>\n        <TextWrapper hover={header} onClick={!header ? undefined : () => setSortColumn(\"appealsNumber\")}>\n            {!header ? appealsNumber : `Число жалоб`}\n        </TextWrapper>\n        <TextWrapper hover={header} onClick={!header ? undefined : () => setSortColumn(\"districtFitness\")}>\n            {!header ? districtFitness + \"%\" : `Приспособленность района`}\n        </TextWrapper>\n        <TextWrapper hover={header} onClick={!header ? undefined : () => setSortColumn(\"rating\")} right>\n            {!header ? Math.floor(rating as number)  : `Рейтинг`}\n        </TextWrapper>\n    </AppealWrapper>\n}\n\nexport default Appeal;\n\nAppeal.propTypes = {\n    index: PropTypes.number,\n    name: PropTypes.string,\n    appealsNumber: PropTypes.number,\n    districtFitness: PropTypes.number,\n    rating: PropTypes.number,\n    header: PropTypes.bool,\n    onClick: PropTypes.func,\n    setSortColumn: PropTypes.func,\n};\n\ninterface AppealProps {\n    index?: number,\n    name?: string,\n    appealsNumber?: number,\n    districtFitness?: number,\n    header?: boolean,\n    onClick?: any,\n    setSortColumn?: any,\n    onAppealsClick?: any,\n    onDistrictClick?: any,\n    rating?: number\n}","export const appeals: Array<AppealI> = [\n    {\n        name: \"KFC\",\n        appealsNumber: 228,\n        districtFitness: 40,\n    },\n    {\n        name: \"Районный суд\",\n        appealsNumber: 700,\n        districtFitness: 26,\n\n    },\n    {\n        name: \"ТД - Есиль\",\n        appealsNumber: 5,\n        districtFitness: 70,\n\n    },\n    {\n        name: \"ТЦ Хан Шатыр\",\n        appealsNumber: 400,\n        districtFitness: 80,\n\n    },\n    {\n        name: \"Цон Есильский\",\n        appealsNumber: 1250,\n        districtFitness: 20,\n\n    },\n    {\n        name: \"Цон Алматинского района\",\n        appealsNumber: 2000,\n        districtFitness: 35,\n\n    },\n    {\n        name: \"Отель Думан\",\n        appealsNumber: 2,\n        districtFitness: 60,\n\n    },\n    {\n        name: \"ТЦ Керуен Сити\",\n        appealsNumber: 500,\n        districtFitness: 15,\n\n    },\n    {\n        name: \"Burger King\",\n        appealsNumber: 211,\n        districtFitness: 46,\n\n    },\n    {\n        name: \"Дом Министерств\",\n        appealsNumber: 1700,\n        districtFitness: 18,\n\n    },\n    {\n        name: \"ТД Евразия\",\n        appealsNumber: 1001,\n        districtFitness: 53,\n\n    },\n    {\n        name: \"Ресторан Туран\",\n        appealsNumber: 60,\n        districtFitness: 71,\n\n    },\n    {\n        name: \"Ресторан Якитория\",\n        appealsNumber: 49,\n        districtFitness: 64,\n\n    },\n    {\n        name: \"Гипермаркет Магнум\",\n        appealsNumber: 350,\n        districtFitness: 87,\n\n    },\n    {\n        name: \"Сеть супермаркетов SMALL\",\n        appealsNumber: 125,\n        districtFitness: 42,\n\n    },\n    {\n        name: \"Кофейня Coffee Shot\",\n        appealsNumber: 41,\n        districtFitness: 20,\n\n    },\n    {\n        name: \"Ледовый дворец Алау\",\n        appealsNumber: 302,\n        districtFitness: 77,\n\n    },\n    {\n        name: \"Стадион Астана-Арена\",\n        appealsNumber: 326,\n        districtFitness: 82,\n\n    },\n    {\n        name: \"Президентский парк\",\n        appealsNumber: 667,\n        districtFitness: 23,\n\n    },\n    {\n        name: \"Ботанический сад\",\n        appealsNumber: 100,\n        districtFitness: 91,\n\n    },\n    {\n        name: \"Шар Экспо\",\n        appealsNumber: 20,\n        districtFitness: 96,\n\n    },\n    {\n        name: \"ТЦ Mega Silkway\",\n        appealsNumber: 654,\n        districtFitness: 64,\n\n    },\n    {\n        name: \"Музей искусств\",\n        appealsNumber: 147,\n        districtFitness: 68,\n\n    }];\n\n// export const appealDescriptions: any = {\n//     \"blind\": [\n//         `Нет визуальных источников информации`,\n//     ],\n//     \"\"\n// }\n\n\n\n\nexport const categories: Array<string> = [\n    \"blind\",\n    \"deaf\",\n    \"motor\",\n    \"wheelchair\"\n];\n\nexport const categoriesTranslation: any = {\n    \"blind\": \"Слепота\",\n    \"deaf\": \"Глухота\",\n    \"motor\": \"Опорно-двигательные отклонения\",\n    \"wheelchair\": \"Колясочники\"\n};\n\n\n\nexport const featureMap: any = {\n    \"appealsNumber\": \"количества жалоб\",\n    \"districtFitness\": \"приспособленности района\",\n    \"rating\": \"рейтинга\"\n};\n\nexport interface AppealI {\n    name: string,\n    appealsNumber: number,\n    districtFitness: number,\n    rating?: number\n}","import React,{useState, useEffect} from 'react';\nimport styled from \"styled-components\";\nimport Appeal from \"./appeal\";\nimport {VerticalSpace} from \"../templates\";\nimport {appeals, featureMap} from \"./appealsData\";\nimport {rate} from \"./sort\";\nimport {useHistory} from 'react-router-dom'\nimport {useDispatch} from \"react-redux\";\nimport {setAppealAction} from \"../state/actions/actions\";\n\nconst AppealsWrapper = styled.div`\n    display: flex;\n    height: 90vh;\n    background-color: #dddddd;\n    flex-direction: column;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 90%;\n    justify-content: flex-start;\n    font-size: 0.7em;\n`;\n\n\n\nfunction Appeals() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [increaseOrder, setIncreaseOrder] = useState(false);\n    const [sortColumn, setSortColumn] = useState(\"rating\");\n\n    return<AppealsWrapper>\n            <VerticalSpace height={\"20px\"}/>\n            <Row>\n                <p>Отсортировано по {increaseOrder ? \"возрастанию\" : \"убыванию\"} {featureMap[sortColumn]}</p>\n            </Row>\n            <VerticalSpace height={\"20px\"}/>\n            <Appeal header\n                    setSortColumn={(value:string) => {\n                        if(value === sortColumn) {\n                            setIncreaseOrder(!increaseOrder);\n                        } else {\n                            setSortColumn(value);\n                            setIncreaseOrder(false);\n                        }\n                    }}\n                    />\n            {appeals.map((appealElem) => ({...appealElem, rating: 0.7 * appealElem.appealsNumber + 0.5 * appealElem.districtFitness}))\n                .sort((appealA, appealB) => rate(appealA, appealB, sortColumn, increaseOrder))\n                .map(({appealsNumber,name, districtFitness, rating}, index) =>\n                <Appeal key={index}\n                        index={index + 1}\n                        name={name}\n                        appealsNumber={appealsNumber}\n                        districtFitness={districtFitness}\n                        rating={rating}\n                        onClick={() => {\n                            dispatch(setAppealAction({name, appealsNumber, districtFitness}));\n                            history.push(\"/appealStats\");\n                        }}\n                />\n            )}\n        </AppealsWrapper>\n}\n\n\nexport default Appeals;","\nexport function rate(appealA: any, appealB: any, column: string = \"rating\", increaseOrder: boolean = false) {\n    if(!increaseOrder) {\n        return appealA[column] - appealB[column]\n    } else {\n        return appealB[column] - appealA[column]\n    }\n}","import {AppealI} from \"../../appeals/appealsData\";\nimport {SET_APPEAL, SET_APPEAL_STAT_CATEGORY, SET_APPEAL_STAT_DATA} from \"./actionTypes\";\nimport {AppealStats} from \"../../appealStats/randomAppeals\";\n\nexport function setAppealAction(appeal: AppealI) {\n    return {type: SET_APPEAL, payload: appeal}\n}\n\nexport function setAppealStatDataAction(data: Array<AppealStats>) {\n    return {type: SET_APPEAL_STAT_DATA, payload: data}\n}\n\nexport function setAppealCategory(category: string) {\n    return {type: SET_APPEAL_STAT_CATEGORY, payload: category};\n}","export const SET_APPEAL = \"SET_APPEAL\";\nexport const SET_APPEAL_STAT_DATA = \"SET_APPEAL_STAT_DATA\";\nexport const SET_APPEAL_STAT_CATEGORY = \"SET_APPEAL_STAT_CATEGORY\";","import styled from \"styled-components\";\nimport React, {useLayoutEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {StateI} from \"../state/reducers\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport {VerticalSpace} from \"../templates\";\n\nconst ChartWrapper = styled.div`\n    height: 70%;\n    width: 80%;\n    \n`;\n\nfunction AllStats() {\n    let data = useSelector((state: StateI) => state.appeals.statsData);\n    const category = useSelector((state: StateI) => state.appeals.category);\n    useLayoutEffect(() => {\n        if(!data) {\n            return;\n        }\n        let x = am4core.create(\"allchartdiv\", am4charts.XYChart);\n        if(category !== \"all\") {\n            data = data.filter((elem) => elem.category === category);\n        }\n\n        const dataObject: {[key: string]: number} = {};\n        for(let elem of data) {\n            if (!dataObject[elem.date]) {\n                dataObject[elem.date] = 1;\n            } else {\n                dataObject[elem.date]++;\n            }\n        }\n        x.data = Object.keys(dataObject).map(key => ({date: key, value: dataObject[key]}));\n\n        let dateAxis = x.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.grid.template.location = 0;\n        dateAxis.title.text = \"Дата\";\n\n        let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.renderer.minWidth = 35;\n        valueAxis.title.text = \"Количество жалоб\";\n\n        let series = x.series.push(new am4charts.ColumnSeries3D());\n        series.dataFields.dateX = \"date\";\n        series.dataFields.valueY = \"value\";\n        series.tooltipText = \"{valueY.value}\";\n\n        x.cursor = new am4charts.XYCursor();\n\n        let title = x.titles.create();\n        title.text = `Статистика жалоб с 2020-04-01 по 2020-04-30`;\n        title.fontSize = 25;\n        title.marginBottom = 30;\n\n        return () => {\n            x.dispose();\n        }\n    }, [data, category]);\n\n    return (<ChartWrapper>\n        <VerticalSpace height={\"20px\"}/>\n        <div id={\"allchartdiv\"} style={{width: \"100%\", height: \"100%\"}}/>\n    </ChartWrapper>)\n}\n\nexport default AllStats;","import moment, {Moment} from \"moment\";\nimport {start} from \"repl\";\nimport {categories} from \"../appeals/appealsData\";\n\nexport interface AppealStats {\n    category: string,\n    date: string\n}\n\nexport function linRegress(W: number, x: number) {\n    let k = (W - 10) / 89;\n    let b = 10 - k;\n    return k * x + b;\n}\n\nexport function randomize(startDate: string, endDate: string, appealsNumber: number): Array<AppealStats> {\n    const startDateMoment: Moment = moment(startDate, \"YYYY-MM-DD\");\n    const endDateMoment: Moment = moment(endDate, \"YYYY-MM-DD\");\n    const duration: number = moment.duration(endDateMoment.diff(startDateMoment)).asDays();\n    const appealsPerDay: number = appealsNumber / duration;\n    let result: Array<AppealStats> = [];\n    const date = moment(startDateMoment);\n    while(true) {\n        for(let i = 0; i < appealsPerDay; i++) {\n            const categoryIndex = Math.floor(Math.random() * categories.length);\n            const category = categories[categoryIndex];\n            result.push({\n                category,\n                date: date.format(\"YYYY-MM-DD\")\n            });\n        }\n        if(endDateMoment.isBefore(date) || endDateMoment.isSame(date)) {\n            break;\n        }\n        date.add(1, \"day\");\n    }\n    result = result.map((elem, i) => {\n        if(withProbability(5)) {\n            const index = Math.floor(Math.random() * (i + 1));\n            elem.date = result[index].date;\n        }\n        return elem;\n    });\n    return result;\n}\n\nfunction withProbability(probability: number): boolean {\n    return Math.floor(Math.random() * 100 / probability) === 0;\n\n}","import styled from \"styled-components\";\nimport React from 'react';\nimport {categories, categoriesTranslation} from \"../appeals/appealsData\";\nimport {HorizontalSpace} from \"../templates\";\nimport {useDispatch} from \"react-redux\";\nimport {setAppealCategory} from \"../state/actions/actions\";\n\nconst CategoryStatsWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst Select = styled.select`\n    height: 50px;\n    border-radius: 10px;\n    border: 0;\n    border: 0.5px solid black;\n    background-color: white;\n`;\nconst Option = styled.option``;\n\nfunction CategoryStats() {\n    const dispatch = useDispatch();\n    return <CategoryStatsWrapper>\n        <Row>\n            <p>Выберите категорию: </p>\n            <HorizontalSpace width={\"30px\"}/>\n            <Select onChange={(event) => dispatch(setAppealCategory(event.target.value))}>\n                <Option value={\"all\"}>Все</Option>\n                {categories.map((value, index) =>\n                    <Option key={index + 1} value={value}>{categoriesTranslation[value]}</Option>\n                )}\n            </Select>\n        </Row>\n    </CategoryStatsWrapper>\n}\n\nexport default CategoryStats;","import styled from \"styled-components\";\nimport React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {StateI} from \"../state/reducers\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport AllStats from \"./allStats\";\nimport {setAppealStatDataAction} from \"../state/actions/actions\";\nimport {randomize} from \"./randomAppeals\";\nimport CategoryStats from \"./categoryStats\";\nimport {Divider, VerticalSpace} from \"../templates\";\n\nam4core.useTheme(am4themes_animated);\n\n\nconst AppealStatsWrapper = styled.div`\n    display: flex;\n    height: 90vh;\n    background-color: #dddddd;\n    flex-direction: column;\n    align-items: center;\n    overflow-y: scroll;\n`;\n\n\nfunction AppealStats() {\n    const state =  useSelector((state: StateI) => state.appeals.appeal);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(setAppealStatDataAction(randomize(\"2020-04-01\", \"2020-04-30\", state.appealsNumber)));\n    });\n    return <AppealStatsWrapper>\n        <AllStats/>\n        <VerticalSpace height={\"50px\"} />\n        <Divider width={\"90%\"}/>\n        <VerticalSpace height={\"50px\"} />\n        <CategoryStats/>\n        </AppealStatsWrapper>\n}\n\nexport default AppealStats;","import {Route} from \"react-router-dom\";\nimport React from \"react\";\nimport Sidebar from \"./sidebar\";\nimport styled from 'styled-components'\nimport {faChartBar, IconDefinition, faAddressBook} from '@fortawesome/free-solid-svg-icons'\nimport Statistics from \"../statistics\";\nimport Appeals from \"../appeals\";\nimport AppealStats from \"../appealStats\";\n\nconst routes: Array<RouteElem> = [\n    {\n        path: \"/statistics\",\n        exact: true,\n        sidebarTitle: \"Статистика\",\n        main: () => <Statistics />,\n        icon: faChartBar,\n    },\n    {\n        path: \"/appeals\",\n        exact: true,\n        sidebarTitle: \"Жалобы\",\n        main: () => <Appeals />,\n        icon: faAddressBook,\n    },\n    {\n        exact: true,\n        path: \"/appealStats\",\n        main: () => <AppealStats />,\n    },\n];\n\nexport interface RouteElem{\n    path: string,\n    exact?: boolean,\n    sidebarTitle?: string,\n    main: Function,\n    icon?: IconDefinition,\n}\n\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst RouterWrapper = styled.div`\n    flex: 11;\n`;\nfunction Routing() {\n    return <Wrapper>\n            <Sidebar routes={routes}/>\n            <RouterWrapper>\n                {\n                    routes.map((elem, index) =>\n                        <Route exact={elem.exact} key={index} path={elem.path}>\n                            <elem.main />\n                        </Route>\n                    )\n                }\n            </RouterWrapper>\n        </Wrapper>\n\n}\n\nexport default Routing;","import styled from \"styled-components\";\nimport React from 'react';\nimport {HorizontalSpace} from \"../../templates\";\n\nconst HeaderWrapper = styled.div`\n    height: 10vh;\n    background-color: #222831;\n    color: #ddd3d3;\n    font-size: 1.5em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    font-family: Titillium;\n    text-transform: uppercase;\n`;\n\nfunction Header() {\n    return <HeaderWrapper>\n        <HorizontalSpace width={\"10px\"}/>\n        <p>Акимат</p>\n    </HeaderWrapper>\n}\n\nexport default Header;","import {SET_APPEAL, SET_APPEAL_STAT_CATEGORY, SET_APPEAL_STAT_DATA} from \"../actions/actionTypes\";\nimport {AppealsState} from \"./index\";\n\nconst initialState: AppealsState = {\n    appeal: {name: \"\", appealsNumber: 0, districtFitness: 0},\n    statsData: [],\n    category: \"all\"\n};\n\nexport default function appealsReducer(state = initialState, action: {payload: any, type: string}) {\n    switch(action.type) {\n        case SET_APPEAL:\n            return {...state, appeal: action.payload};\n        case SET_APPEAL_STAT_DATA:\n            return {...state, statsData: action.payload};\n        case SET_APPEAL_STAT_CATEGORY:\n            return {...state, category: action.payload};\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport appealsReducer from \"./appealsReducer\";\nimport {AppealI} from \"../../appeals/appealsData\";\nimport {AppealStats} from \"../../appealStats/randomAppeals\";\n\nexport default combineReducers({appeals: appealsReducer})\n\nexport interface AppealsState {\n    appeal: AppealI\n    statsData: Array<AppealStats>,\n    category: string\n}\n\nexport interface StateI {\n    appeals: AppealsState\n}","import {createStore} from 'redux';\nimport reducers from './../reducers';\n\nexport const store = createStore(reducers, (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport Routing from \"./router\";\nimport styled from \"styled-components\";\nimport Header from \"./router/header\";\nimport {withRouter} from \"react-router\";\nimport { Provider } from 'react-redux';\nimport {store} from \"./state/store\";\n\nconst AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  return (\n      <Provider store={store}>\n          <AppWrapper>\n              <Header/>\n              <Routing/>\n          </AppWrapper>\n      </Provider>\n\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}